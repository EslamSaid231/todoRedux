{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nexport const getTodosAsync = createAsyncThunk(\"todos/getTodosAsync\", async () => {\n  const response = await fetch(\"http://localhost:7000/todos\");\n  if (response.ok) {\n    const todos = await response.json();\n    return {\n      todos\n    };\n  }\n});\nexport const toggleCompleteAsync = createAsyncThunk(\"todos/completeTodoAsync\", async payload => {\n  const response = await fetch(`http://localhost:7000/todos/${payload.id}`, {\n    method: \"PATCH\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      completed: payload.completed\n    })\n  });\n  if (response.ok) {\n    const todo = await response.json();\n    return {\n      id: todo.id,\n      completed: todo.completed\n    };\n  }\n});\nexport const updateTodoAsync = createAsyncThunk(\"todos/updateTodoAsync\", async payload => {\n  const response = await fetch(`http://localhost:7000/todos/${payload.id}`, {\n    method: \"PATCH\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      title: payload.title\n    })\n  });\n  if (response.ok) {\n    const todo = await response.json();\n    return {\n      todo\n    };\n  }\n});\nexport const addTodoAsync = createAsyncThunk(\"todos/addTodoAsync\", async payload => {\n  const response = await fetch(\"http://localhost:7000/todos\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      title: payload.title\n    })\n  });\n  if (response.ok) {\n    const todo = await response.json();\n    return {\n      todo\n    };\n  }\n});\nexport const DeleteTodoAsync = createAsyncThunk(\"todos/deleteTodoAsync\", async payload => {\n  const response = await fetch(`http://localhost:7000/todos/${payload.id}`, {\n    method: \"DELETE\"\n  });\n  if (response.ok) {\n    return {\n      id: payload.id\n    };\n  }\n});\nconst todoSlice = createSlice({\n  name: \"todos\",\n  initialState: [{\n    id: 1,\n    title: \"todo1\",\n    completed: false\n  }, {\n    id: 2,\n    title: \"todo2\",\n    completed: false\n  }, {\n    id: 3,\n    title: \"todo3\",\n    completed: true\n  }],\n  reducers: {\n    addTodo: (state, action) => {\n      const newTodo = {\n        id: Date.now(),\n        title: action.payload.title,\n        completed: false\n      };\n      state.push(newTodo);\n      console.log(newTodo);\n    },\n    toggleComplete: (state, action) => {\n      const index = state.findIndex(todo => todo.id === action.payload.id);\n      state[index].completed = action.payload.completed;\n    },\n    deleteTodo: (state, action) => {\n      return state.filter(todo => todo.id !== action.payload.id);\n    },\n    updatePost: (state, action) => {\n      state.map(todo => {\n        if (todo.id === action.payload.id) {\n          todo.title = action.payload.title;\n        }\n      });\n    }\n  },\n  extraReducers: {\n    [getTodosAsync.pending]: (state, action) => {\n      console.log(\"fetching data...\");\n    },\n    [getTodosAsync.fulfilled]: (state, action) => {\n      console.log(\"fetching data successfully\");\n      return action.payload.todos;\n    },\n    [addTodoAsync.fulfilled]: (state, action) => {\n      state.push(action.payload.todo);\n    },\n    [toggleCompleteAsync.fulfilled]: (state, action) => {\n      const index = state.findIndex(todo => todo.id === action.payload.id);\n      state[index].completed = action.payload.completed;\n    },\n    [DeleteTodoAsync.fulfilled]: (state, action) => {\n      return state.filter(todo => todo.id !== action.payload.id);\n    },\n    [updateTodoAsync.fulfilled]: (state, action) => {\n      console.log(state.map(todo => {\n        if (todo.id === action.payload.id) {\n          todo.title = action.payload.title;\n        }\n      }));\n    }\n  }\n});\nexport const TodoActions = todoSlice.actions;\nexport default todoSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","getTodosAsync","response","fetch","ok","todos","json","toggleCompleteAsync","payload","id","method","headers","body","JSON","stringify","completed","todo","updateTodoAsync","title","addTodoAsync","DeleteTodoAsync","todoSlice","name","initialState","reducers","addTodo","state","action","newTodo","Date","now","push","console","log","toggleComplete","index","findIndex","deleteTodo","filter","updatePost","map","extraReducers","pending","fulfilled","TodoActions","actions","reducer"],"sources":["E:/Shiko/GoMyCode/React course/Redux/Redux checkpoint todoList - Copy/src/Redux/todoSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nexport const getTodosAsync = createAsyncThunk(\r\n  \"todos/getTodosAsync\",\r\n  async () => {\r\n    const response = await fetch(\"http://localhost:7000/todos\");\r\n    if (response.ok) {\r\n      const todos = await response.json();\r\n      return { todos };\r\n    }\r\n  }\r\n);\r\nexport const toggleCompleteAsync = createAsyncThunk(\r\n  \"todos/completeTodoAsync\",\r\n  async (payload) => {\r\n    const response = await fetch(`http://localhost:7000/todos/${payload.id}`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ completed: payload.completed }),\r\n    });\r\n    if (response.ok) {\r\n      const todo = await response.json();\r\n      return { id: todo.id, completed: todo.completed };\r\n    }\r\n  }\r\n);\r\nexport const updateTodoAsync = createAsyncThunk(\r\n  \"todos/updateTodoAsync\",\r\n  async (payload) => {\r\n    const response = await fetch(`http://localhost:7000/todos/${payload.id}`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ title: payload.title }),\r\n    });\r\n    if (response.ok) {\r\n      const todo = await response.json();\r\n      return { todo };\r\n    }\r\n  }\r\n);\r\nexport const addTodoAsync = createAsyncThunk(\r\n  \"todos/addTodoAsync\",\r\n  async (payload) => {\r\n    const response = await fetch(\"http://localhost:7000/todos\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ title: payload.title }),\r\n    });\r\n    if (response.ok) {\r\n      const todo = await response.json();\r\n      return { todo };\r\n    }\r\n  }\r\n);\r\nexport const DeleteTodoAsync = createAsyncThunk(\r\n  \"todos/deleteTodoAsync\",\r\n  async (payload) => {\r\n    const response = await fetch(`http://localhost:7000/todos/${payload.id}`, {\r\n      method: \"DELETE\",\r\n    });\r\n    if (response.ok) {\r\n      return { id: payload.id };\r\n    }\r\n  }\r\n);\r\nconst todoSlice = createSlice({\r\n  name: \"todos\",\r\n  initialState: [\r\n    { id: 1, title: \"todo1\", completed: false },\r\n    { id: 2, title: \"todo2\", completed: false },\r\n    { id: 3, title: \"todo3\", completed: true },\r\n  ],\r\n  reducers: {\r\n    addTodo: (state, action) => {\r\n      const newTodo = {\r\n        id: Date.now(),\r\n        title: action.payload.title,\r\n        completed: false,\r\n      };\r\n      state.push(newTodo);\r\n\r\n      console.log(newTodo);\r\n    },\r\n    toggleComplete: (state, action) => {\r\n      const index = state.findIndex((todo) => todo.id === action.payload.id);\r\n      state[index].completed = action.payload.completed;\r\n    },\r\n    deleteTodo: (state, action) => {\r\n      return state.filter((todo) => todo.id !== action.payload.id);\r\n    },\r\n    updatePost: (state, action) => {\r\n      state.map((todo) => {\r\n        if (todo.id === action.payload.id) {\r\n          todo.title = action.payload.title;\r\n        }\r\n      });\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [getTodosAsync.pending]: (state, action) => {\r\n      console.log(\"fetching data...\");\r\n    },\r\n    [getTodosAsync.fulfilled]: (state, action) => {\r\n      console.log(\"fetching data successfully\");\r\n      return action.payload.todos;\r\n    },\r\n    [addTodoAsync.fulfilled]: (state, action) => {\r\n      state.push(action.payload.todo);\r\n    },\r\n    [toggleCompleteAsync.fulfilled]: (state, action) => {\r\n      const index = state.findIndex((todo) => todo.id === action.payload.id);\r\n      state[index].completed = action.payload.completed;\r\n    },\r\n    [DeleteTodoAsync.fulfilled]: (state, action) => {\r\n      return state.filter((todo) => todo.id !== action.payload.id);\r\n    },\r\n    [updateTodoAsync.fulfilled]: (state, action) => {\r\n      console.log(\r\n        state.map((todo) => {\r\n          if (todo.id === action.payload.id) {\r\n            todo.title = action.payload.title;\r\n          }\r\n        })\r\n      );\r\n    },\r\n  },\r\n});\r\n\r\nexport const TodoActions = todoSlice.actions;\r\nexport default todoSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}