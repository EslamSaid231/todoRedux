{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nimport TasksList from \"../component/Tasks/TasksList\";\nconst initialTaskState = {\n  tasks: []\n};\nconst taskSlice = createSlice({\n  name: \"tasks\",\n  initialState: initialTaskState,\n  reducers: {\n    addTask(state, action) {\n      return {\n        ...state.tasks,\n        task: action.payload\n      };\n    }\n  }\n});\nexport const tasksActions = taskSlice.actions;\nconst store = configureStore({\n  reducer: {\n    tasks: taskSlice.reducer\n  }\n});\nexport default store;\n// import { createSlice, configureStore } from \"@reduxjs/toolkit\";\n\n// const initialCounterState = { counter: 0, showCounter: true };\n\n// const counterSlice = createSlice({\n//   name: \"counter\",\n//   initialState: initialCounterState,\n//   reducers: {\n//     increment(state) {\n//       state.counter++;\n//     },\n//     decrement(state) {\n//       state.counter--;\n//     },\n//     increase(state, action) {\n//       state.counter = action.payload;\n//     },\n//     toggleCounter(state) {\n//       state.showCounter = !state.showCounter;\n//     },\n//   },\n// });\n// const initialAuthState = {\n//   isAuthenticated: false,\n// };\n// const authSlice = createSlice({\n//   name: \"authentication\",\n//   initialState: initialAuthState,\n//   reducers: {\n//     login(state) {\n//       state.isAuthenticated = true;\n//     },\n//     logout(state) {\n//       state.isAuthenticated = false;\n//     },\n//   },\n// });\n\n// const store = configureStore({\n//   reducer: { counter: counterSlice.reducer, auth: authSlice.reducer },\n// });\n\n// export const counterActions = counterSlice.actions;\n// export const authActions = authSlice.actions;\n// export default store;\n\n// const counterReducer = (state = initialState, action) => {\n//   if (action.type === \"increment\") {\n//     return {\n//       counter: state.counter + 1,\n//       showCounter: state.showCounter,\n//     };\n//   }\n//   if (action.type === \"decrement\") {\n//     return { counter: state.counter - 1, showCounter: state.showCounter };\n//   }\n//   if (action.type === \"increase\") {\n//     return {\n//       counter: state.counter + action.amount,\n//       showCounter: state.showCounter,\n//     };\n//   }\n//   if (action.type === \"toggle\") {\n//     return {\n//       showCounter: !state.showCounter,\n//       counter: state.counter,\n//     };\n//   }\n//   return state;\n// };\n\n// const store = configureStore({\n//   reducer: {counter: counterSlice.reducer, anotherReducer: anotherSlice.reducer}\n// });","map":{"version":3,"names":["createSlice","configureStore","TasksList","initialTaskState","tasks","taskSlice","name","initialState","reducers","addTask","state","action","task","payload","tasksActions","actions","store","reducer"],"sources":["E:/Shiko/GoMyCode/React course/Redux/Redux checkpoint todoList/src/Store/index.js"],"sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\nimport TasksList from \"../component/Tasks/TasksList\";\r\n\r\nconst initialTaskState = {\r\n  tasks: [],\r\n};\r\n\r\nconst taskSlice = createSlice({\r\n  name: \"tasks\",\r\n  initialState: initialTaskState,\r\n  reducers: {\r\n    addTask(state, action) {\r\n      return { ...state.tasks, task: action.payload };\r\n    },\r\n  },\r\n});\r\nexport const tasksActions = taskSlice.actions;\r\n\r\nconst store = configureStore({ reducer: { tasks: taskSlice.reducer } });\r\nexport default store;\r\n// import { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\n\r\n// const initialCounterState = { counter: 0, showCounter: true };\r\n\r\n// const counterSlice = createSlice({\r\n//   name: \"counter\",\r\n//   initialState: initialCounterState,\r\n//   reducers: {\r\n//     increment(state) {\r\n//       state.counter++;\r\n//     },\r\n//     decrement(state) {\r\n//       state.counter--;\r\n//     },\r\n//     increase(state, action) {\r\n//       state.counter = action.payload;\r\n//     },\r\n//     toggleCounter(state) {\r\n//       state.showCounter = !state.showCounter;\r\n//     },\r\n//   },\r\n// });\r\n// const initialAuthState = {\r\n//   isAuthenticated: false,\r\n// };\r\n// const authSlice = createSlice({\r\n//   name: \"authentication\",\r\n//   initialState: initialAuthState,\r\n//   reducers: {\r\n//     login(state) {\r\n//       state.isAuthenticated = true;\r\n//     },\r\n//     logout(state) {\r\n//       state.isAuthenticated = false;\r\n//     },\r\n//   },\r\n// });\r\n\r\n// const store = configureStore({\r\n//   reducer: { counter: counterSlice.reducer, auth: authSlice.reducer },\r\n// });\r\n\r\n// export const counterActions = counterSlice.actions;\r\n// export const authActions = authSlice.actions;\r\n// export default store;\r\n\r\n// const counterReducer = (state = initialState, action) => {\r\n//   if (action.type === \"increment\") {\r\n//     return {\r\n//       counter: state.counter + 1,\r\n//       showCounter: state.showCounter,\r\n//     };\r\n//   }\r\n//   if (action.type === \"decrement\") {\r\n//     return { counter: state.counter - 1, showCounter: state.showCounter };\r\n//   }\r\n//   if (action.type === \"increase\") {\r\n//     return {\r\n//       counter: state.counter + action.amount,\r\n//       showCounter: state.showCounter,\r\n//     };\r\n//   }\r\n//   if (action.type === \"toggle\") {\r\n//     return {\r\n//       showCounter: !state.showCounter,\r\n//       counter: state.counter,\r\n//     };\r\n//   }\r\n//   return state;\r\n// };\r\n\r\n// const store = configureStore({\r\n//   reducer: {counter: counterSlice.reducer, anotherReducer: anotherSlice.reducer}\r\n// });\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAC9D,OAAOC,SAAS,MAAM,8BAA8B;AAEpD,MAAMC,gBAAgB,GAAG;EACvBC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,SAAS,GAAGL,WAAW,CAAC;EAC5BM,IAAI,EAAE,OAAO;EACbC,YAAY,EAAEJ,gBAAgB;EAC9BK,QAAQ,EAAE;IACRC,OAAO,CAACC,KAAK,EAAEC,MAAM,EAAE;MACrB,OAAO;QAAE,GAAGD,KAAK,CAACN,KAAK;QAAEQ,IAAI,EAAED,MAAM,CAACE;MAAQ,CAAC;IACjD;EACF;AACF,CAAC,CAAC;AACF,OAAO,MAAMC,YAAY,GAAGT,SAAS,CAACU,OAAO;AAE7C,MAAMC,KAAK,GAAGf,cAAc,CAAC;EAAEgB,OAAO,EAAE;IAAEb,KAAK,EAAEC,SAAS,CAACY;EAAQ;AAAE,CAAC,CAAC;AACvE,eAAeD,KAAK;AACpB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}