{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst todoSlice = createSlice({\n  name: \"todos\",\n  initialState: [{\n    id: 1,\n    title: \"todo1\",\n    completed: false\n  }, {\n    id: 2,\n    title: \"todo2\",\n    completed: false\n  }, {\n    id: 3,\n    title: \"todo3\",\n    completed: true\n  }],\n  reducers: {\n    addTodo: (state, action) => {\n      const newTodo = {\n        id: Date.now(),\n        title: action.payload.title,\n        completed: false\n      };\n      state.push(newTodo);\n      console.log(state.title);\n    },\n    toggleComplete: (state, action) => {\n      const index = state.findIndex(todo => todo.id === action.payload.id);\n      state[index].completed = action.payload.completed;\n    },\n    deleteTodo: (state, action) => {\n      return state.filter(todo => todo.id !== action.payload.id);\n    }\n  }\n});\nexport const TodoActions = todoSlice.actions;\nexport default todoSlice.reducer;","map":{"version":3,"names":["createSlice","todoSlice","name","initialState","id","title","completed","reducers","addTodo","state","action","newTodo","Date","now","payload","push","console","log","toggleComplete","index","findIndex","todo","deleteTodo","filter","TodoActions","actions","reducer"],"sources":["E:/Shiko/GoMyCode/React course/Redux/Redux checkpoint todoList - Copy/src/Redux/todoSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst todoSlice = createSlice({\r\n  name: \"todos\",\r\n  initialState: [\r\n    { id: 1, title: \"todo1\", completed: false },\r\n    { id: 2, title: \"todo2\", completed: false },\r\n    { id: 3, title: \"todo3\", completed: true },\r\n  ],\r\n  reducers: {\r\n    addTodo: (state, action) => {\r\n      const newTodo = {\r\n        id: Date.now(),\r\n        title: action.payload.title,\r\n        completed: false,\r\n      };\r\n      state.push(newTodo);\r\n      console.log(state.title);\r\n    },\r\n    toggleComplete: (state, action) => {\r\n      const index = state.findIndex((todo) => todo.id === action.payload.id);\r\n      state[index].completed = action.payload.completed;\r\n    },\r\n    deleteTodo: (state, action) => {\r\n      return state.filter((todo) => todo.id !== action.payload.id);\r\n    },\r\n  },\r\n});\r\n\r\nexport const TodoActions = todoSlice.actions;\r\nexport default todoSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE,CACZ;IAAEC,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,OAAO;IAAEC,SAAS,EAAE;EAAM,CAAC,EAC3C;IAAEF,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,OAAO;IAAEC,SAAS,EAAE;EAAM,CAAC,EAC3C;IAAEF,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,OAAO;IAAEC,SAAS,EAAE;EAAK,CAAC,CAC3C;EACDC,QAAQ,EAAE;IACRC,OAAO,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1B,MAAMC,OAAO,GAAG;QACdP,EAAE,EAAEQ,IAAI,CAACC,GAAG,EAAE;QACdR,KAAK,EAAEK,MAAM,CAACI,OAAO,CAACT,KAAK;QAC3BC,SAAS,EAAE;MACb,CAAC;MACDG,KAAK,CAACM,IAAI,CAACJ,OAAO,CAAC;MACnBK,OAAO,CAACC,GAAG,CAACR,KAAK,CAACJ,KAAK,CAAC;IAC1B,CAAC;IACDa,cAAc,EAAE,CAACT,KAAK,EAAEC,MAAM,KAAK;MACjC,MAAMS,KAAK,GAAGV,KAAK,CAACW,SAAS,CAAEC,IAAI,IAAKA,IAAI,CAACjB,EAAE,KAAKM,MAAM,CAACI,OAAO,CAACV,EAAE,CAAC;MACtEK,KAAK,CAACU,KAAK,CAAC,CAACb,SAAS,GAAGI,MAAM,CAACI,OAAO,CAACR,SAAS;IACnD,CAAC;IACDgB,UAAU,EAAE,CAACb,KAAK,EAAEC,MAAM,KAAK;MAC7B,OAAOD,KAAK,CAACc,MAAM,CAAEF,IAAI,IAAKA,IAAI,CAACjB,EAAE,KAAKM,MAAM,CAACI,OAAO,CAACV,EAAE,CAAC;IAC9D;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMoB,WAAW,GAAGvB,SAAS,CAACwB,OAAO;AAC5C,eAAexB,SAAS,CAACyB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}