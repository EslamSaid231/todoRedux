{"ast":null,"code":"var _jsxFileName = \"E:\\\\Shiko\\\\GoMyCode\\\\React course\\\\Redux\\\\Redux checkpoint todoList\\\\src\\\\component\\\\Tasks\\\\TasksList.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { tasksActions } from \"../../Store\";\nimport \"./TasksList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TasksList = () => {\n  _s();\n  const [inputData, setInputData] = useState(\"\");\n  const dispatch = useDispatch();\n  const todos = useSelector(state => state.tasks.todos);\n  const completed = useSelector(state => state.tasks.completed);\n  const submitHandler = e => {\n    e.preventDefault();\n  };\n  const ClickHandler = () => {\n    console.log(todos);\n    if (inputData.length > 0) {\n      dispatch(tasksActions.addTask(inputData));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setInputData(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), todos.map(todo => todo.id === 0 ? null : /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => dispatch(tasksActions.CompletedTask(todo.id)),\n        className: completed ? \"completed-list\" : \"list\",\n        children: [todo.task, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => dispatch(tasksActions.deleteTask(todo.id)),\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: ClickHandler,\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(TasksList, \"qzb74xGL5eCfMSapgOOsw+ijixw=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = TasksList;\nexport default TasksList;\nvar _c;\n$RefreshReg$(_c, \"TasksList\");","map":{"version":3,"names":["React","useRef","useState","useDispatch","useSelector","tasksActions","TasksList","inputData","setInputData","dispatch","todos","state","tasks","completed","submitHandler","e","preventDefault","ClickHandler","console","log","length","addTask","target","value","map","todo","id","CompletedTask","task","deleteTask"],"sources":["E:/Shiko/GoMyCode/React course/Redux/Redux checkpoint todoList/src/component/Tasks/TasksList.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { tasksActions } from \"../../Store\";\r\nimport \"./TasksList.css\";\r\nconst TasksList = () => {\r\n  const [inputData, setInputData] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const todos = useSelector((state) => state.tasks.todos);\r\n  const completed = useSelector((state) => state.tasks.completed);\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n  };\r\n  const ClickHandler = () => {\r\n    console.log(todos);\r\n    if (inputData.length > 0) {\r\n      dispatch(tasksActions.addTask(inputData));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={submitHandler}>\r\n        <input type=\"text\" onChange={(e) => setInputData(e.target.value)} />\r\n\r\n        {todos.map((todo) =>\r\n          todo.id === 0 ? null : (\r\n            <li\r\n              key={todo.id}\r\n              onClick={() => dispatch(tasksActions.CompletedTask(todo.id))}\r\n              className={completed ? \"completed-list\" : \"list\"}\r\n            >\r\n              {todo.task}\r\n              <button\r\n                onClick={() => dispatch(tasksActions.deleteTask(todo.id))}\r\n              >\r\n                x\r\n              </button>\r\n            </li>\r\n          )\r\n        )}\r\n\r\n        <button onClick={ClickHandler}>submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TasksList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,YAAY,QAAQ,aAAa;AAC1C,OAAO,iBAAiB;AAAC;AACzB,MAAMC,SAAS,GAAG,MAAM;EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMO,QAAQ,GAAGN,WAAW,EAAE;EAC9B,MAAMO,KAAK,GAAGN,WAAW,CAAEO,KAAK,IAAKA,KAAK,CAACC,KAAK,CAACF,KAAK,CAAC;EACvD,MAAMG,SAAS,GAAGT,WAAW,CAAEO,KAAK,IAAKA,KAAK,CAACC,KAAK,CAACC,SAAS,CAAC;EAC/D,MAAMC,aAAa,GAAIC,CAAC,IAAK;IAC3BA,CAAC,CAACC,cAAc,EAAE;EACpB,CAAC;EACD,MAAMC,YAAY,GAAG,MAAM;IACzBC,OAAO,CAACC,GAAG,CAACT,KAAK,CAAC;IAClB,IAAIH,SAAS,CAACa,MAAM,GAAG,CAAC,EAAE;MACxBX,QAAQ,CAACJ,YAAY,CAACgB,OAAO,CAACd,SAAS,CAAC,CAAC;IAC3C;EACF,CAAC;EAED,oBACE;IAAA,uBACE;MAAM,QAAQ,EAAEO,aAAc;MAAA,wBAC5B;QAAO,IAAI,EAAC,MAAM;QAAC,QAAQ,EAAGC,CAAC,IAAKP,YAAY,CAACO,CAAC,CAACO,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG,EAEnEb,KAAK,CAACc,GAAG,CAAEC,IAAI,IACdA,IAAI,CAACC,EAAE,KAAK,CAAC,GAAG,IAAI,gBAClB;QAEE,OAAO,EAAE,MAAMjB,QAAQ,CAACJ,YAAY,CAACsB,aAAa,CAACF,IAAI,CAACC,EAAE,CAAC,CAAE;QAC7D,SAAS,EAAEb,SAAS,GAAG,gBAAgB,GAAG,MAAO;QAAA,WAEhDY,IAAI,CAACG,IAAI,eACV;UACE,OAAO,EAAE,MAAMnB,QAAQ,CAACJ,YAAY,CAACwB,UAAU,CAACJ,IAAI,CAACC,EAAE,CAAC,CAAE;UAAA,UAC3D;QAED;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA,GATJD,IAAI,CAACC,EAAE;QAAA;QAAA;QAAA;MAAA,QAWf,CACF,eAED;QAAQ,OAAO,EAAET,YAAa;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EACzC;IAAA;IAAA;IAAA;EAAA,QACH;AAEV,CAAC;AAAC,GAzCIX,SAAS;EAAA,QAEIH,WAAW,EACdC,WAAW,EACPA,WAAW;AAAA;AAAA,KAJzBE,SAAS;AA2Cf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}