{"ast":null,"code":"var _jsxFileName = \"E:\\\\Shiko\\\\GoMyCode\\\\React course\\\\Redux\\\\Redux checkpoint todoList\\\\src\\\\component\\\\Tasks\\\\TasksList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { tasksActions } from \"../../Store\";\nimport \"./TasksList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TasksList = () => {\n  _s();\n  const [inputData, setInputData] = useState(\"\");\n  const [editing, setEditing] = useState(false);\n  const dispatch = useDispatch();\n  const todos = useSelector(state => state.tasks.todos);\n  let completed = useSelector(state => state.tasks.todos.completed);\n  console.log(completed);\n  const submitHandler = e => {\n    e.preventDefault();\n  };\n  const ClickHandler = () => {\n    console.log(completed);\n    if (inputData.length > 0) {\n      dispatch(tasksActions.addTask(inputData));\n    }\n  };\n  let viewMode = {};\n  let editMode = {};\n  if (editing) {\n    viewMode.display = \"none\";\n  } else {\n    editMode.display = \"none\";\n  }\n  if (editing) {}\n  const handleEditing = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setInputData(e.target.value),\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), todos.map(todo => todo.id === 0 ? null : /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => {\n          dispatch(tasksActions.CompletedTask(todo.id));\n        },\n        className: todo.completed ? \"completed-list\" : \"list \",\n        children: [todo.task, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            dispatch(tasksActions.deleteTask(todo.id));\n          },\n          className: todo.completed ? \"button-completed\" : \"button\",\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEditing,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: ClickHandler,\n        className: \"button\",\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(TasksList, \"hcePunGpSKTJYWp9fa+dOOQ3bRc=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = TasksList;\nexport default TasksList;\nvar _c;\n$RefreshReg$(_c, \"TasksList\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","tasksActions","TasksList","inputData","setInputData","editing","setEditing","dispatch","todos","state","tasks","completed","console","log","submitHandler","e","preventDefault","ClickHandler","length","addTask","viewMode","editMode","display","handleEditing","target","value","map","todo","id","CompletedTask","task","deleteTask"],"sources":["E:/Shiko/GoMyCode/React course/Redux/Redux checkpoint todoList/src/component/Tasks/TasksList.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { tasksActions } from \"../../Store\";\r\nimport \"./TasksList.css\";\r\nconst TasksList = () => {\r\n  const [inputData, setInputData] = useState(\"\");\r\n  const [editing, setEditing] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const todos = useSelector((state) => state.tasks.todos);\r\n  let completed = useSelector((state) => state.tasks.todos.completed);\r\n  console.log(completed);\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n  };\r\n  const ClickHandler = () => {\r\n    console.log(completed);\r\n    if (inputData.length > 0) {\r\n      dispatch(tasksActions.addTask(inputData));\r\n    }\r\n  };\r\n  let viewMode = {};\r\n  let editMode = {};\r\n  if (editing) {\r\n    viewMode.display = \"none\";\r\n  } else {\r\n    editMode.display = \"none\";\r\n  }\r\n  if (editing) {\r\n  }\r\n  const handleEditing = () => {};\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={submitHandler}>\r\n        <input\r\n          type=\"text\"\r\n          onChange={(e) => setInputData(e.target.value)}\r\n          className=\"input-field\"\r\n        />\r\n\r\n        {todos.map((todo) =>\r\n          todo.id === 0 ? null : (\r\n            <li\r\n              onClick={() => {\r\n                dispatch(tasksActions.CompletedTask(todo.id));\r\n              }}\r\n              key={todo.id}\r\n              className={todo.completed ? \"completed-list\" : \"list \"}\r\n            >\r\n              {todo.task}\r\n              <button\r\n                onClick={() => {\r\n                  dispatch(tasksActions.deleteTask(todo.id));\r\n                }}\r\n                className={todo.completed ? \"button-completed\" : \"button\"}\r\n              >\r\n                x\r\n              </button>\r\n\r\n              <button onClick={handleEditing}>Edit</button>\r\n            </li>\r\n          )\r\n        )}\r\n        <br />\r\n        <button onClick={ClickHandler} className=\"button\">\r\n          submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TasksList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}